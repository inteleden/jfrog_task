name: JFrog Build and Publish - Three Versions
on:
  push:
    branches: [ "main", "version-*" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  packages: write

jobs:
  build-publish-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - version: v1
            branch: version-1
          - version: v2
            branch: version-2
          - version: v3
            branch: version-3
    
    env:
      DOCKER_REPO: inteleden-docker
      IMAGE_NAME: jfrog-task
      JF_URL: https://inteltask.jfrog.io
      JFROG_CLI_BUILD_NAME: jfrog-task-${{ matrix.version }}
      JFROG_CLI_BUILD_NUMBER: ${{ github.run_number }}

    steps:
    - name: Checkout the repository
      uses: actions/checkout@v4
      with:
        ref: ${{ matrix.branch }}

    - name: Setup JFrog CLI
      uses: jfrog/setup-jfrog-cli@v4
      env:
        JF_URL: ${{ env.JF_URL }}
        JF_USER: ${{ secrets.JF_USER }}
        JF_PASSWORD: ${{ secrets.JF_PASSWORD }}

    - name: Verify JFrog Connection
      run: |
        jfrog config show
        jfrog rt ping

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker Login to JFrog
      run: |
        echo "${{ secrets.JF_PASSWORD }}" | docker login inteltask.jfrog.io \
          -u ${{ secrets.JF_USER }} --password-stdin

    - name: Build Docker Image
      run: |
        docker build -t inteltask.jfrog.io/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.version }} .
        
    - name: Push Docker Image
      run: |
        docker push inteltask.jfrog.io/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.version }}

    - name: Collect Build Environment
      run: |
        jfrog rt build-collect-env

    - name: Add Git Information
      run: |
        jfrog rt build-add-git

    - name: Add Docker Package to Build
      run: |
        DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' inteltask.jfrog.io/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.version }} | cut -d'@' -f2)
        echo "inteltask.jfrog.io/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ matrix.version }}@${DIGEST}" > image.txt
        jfrog rt build-docker-create ${{ env.DOCKER_REPO }} --image-file image.txt
        
    - name: Publish Build Info
      run: |
        jfrog rt build-publish
        
    - name: Scan Build (Optional)
      continue-on-error: true
      run: |
        jfrog rt build-scan ${{ env.JFROG_CLI_BUILD_NAME }} ${{ env.JFROG_CLI_BUILD_NUMBER }}

  summary:
    needs: build-publish-docker
    runs-on: ubuntu-latest
    if: always()
    steps:
    - name: Summary
      run: |
        echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ V1: Baseline with vulnerabilities" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ V2: Body-parser mitigated" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ V3: Moment.js fixed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Build Number: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "JFrog Instance: https://inteltask.jfrog.io" >> $GITHUB_STEP_SUMMARY
